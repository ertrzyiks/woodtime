{"version":3,"sources":["components/Storage/Storage.tsx","components/EventList/EventList.tsx","components/AddEvent/AddEvent.tsx","components/MissingCheckpointsArea/MissingCheckpointsArea.tsx","components/ScoreLauf/ScoreLauf.tsx","components/EventPage/EventPage.tsx","components/AddCheckpointPage/AddCheckpointPage.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["StorageContext","React","createContext","events","ActionsContext","PersistInLocalstorage","value","useContext","useEffect","localStorage","setItem","JSON","stringify","Storage","children","useState","storedValueRaw","getItem","parse","setValue","actions","addEvent","name","event","id","Date","getTime","toString","createdAt","toISOString","numberOfCheckpoints","checkpoints","newValue","addCheckpoint","eventId","code","skipped","find","e","checkpoint","Error","newEvents","map","Provider","Event","ListItem","button","component","Link","to","ListItemText","primary","secondary","EventList","List","Fab","color","aria-label","AddEvent","setName","history","useHistory","handleClose","push","Dialog","open","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","TextField","label","onChange","target","DialogActions","Button","onClick","MissingCheckpointsArea","scoredIds","max","missingPoints","Array","fill","_","idx","filter","p","includes","length","Box","mt","minWidth","ml","mb","Typography","display","alignItems","width","join","LinearProgressWithLabel","current","props","mr","LinearProgress","variant","ScoreLauf","newCheckpointPath","ch","parseInt","EventPage","useParams","useStyles","makeStyles","theme","createStyles","margin","spacing","AddCheckpointPage","classes","onSubmit","initialValues","render","values","handleSubmit","input","meta","className","required","autoComplete","touched","error","disabled","type","FormControlLabel","control","Checkbox","checked","root","flexGrow","menuButton","marginRight","title","App","basename","process","AppBar","position","Toolbar","RouterLink","path","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.23fdfb6b.chunk.js","sourcesContent":["import React, {ReactNode, useContext, useEffect, useState} from 'react'\nimport {OrienteeringEvent} from \"../../types/OrienteeringEvent\"\nimport {Checkpoint} from \"../../types/Checkpoint\";\n\ninterface Actions {\n  addEvent: (name: string) => OrienteeringEvent\n  addCheckpoint: (params: { eventId: string, id: string, code?: string, skipped: boolean }) => Checkpoint\n}\n\ninterface State {\n  events: OrienteeringEvent[]\n}\n\nexport const StorageContext = React.createContext<State>({ events: [] })\nexport const ActionsContext = React.createContext<Actions|null>(null)\n\nconst PersistInLocalstorage = () => {\n  const value = useContext(StorageContext)\n\n  useEffect(() => {\n    localStorage.setItem('woodtime-storage', JSON.stringify(value))\n  }, [value])\n\n  return null\n}\n\nconst Storage = ({ children }: { children?: ReactNode }) => {\n  const [value, setValue] = useState<State>(() => {\n    const storedValueRaw =  localStorage.getItem('woodtime-storage') ?? ''\n    return storedValueRaw ? JSON.parse(storedValueRaw) : { events: [] as Event[] }\n  })\n\n  const actions: Actions = {\n    addEvent: (name: string) => {\n      const event = {\n        id: new Date().getTime().toString(),\n        name, createdAt: new Date().toISOString(),\n        numberOfCheckpoints: 10,\n        checkpoints: []\n      }\n      const newValue = { events: [...value.events, event] }\n      setValue(newValue)\n      return event\n    },\n\n    addCheckpoint({ eventId, id, code, skipped }) {\n      const event = value.events.find(e => e.id === eventId)\n      const checkpoint = {\n        id,\n        skipped,\n        code\n      }\n\n      if (!event) {\n        throw new Error(`Event ${eventId} not found`)\n      }\n\n      const newEvents = value.events.map(e => {\n        if (e.id === eventId) {\n          return { ...e, checkpoints: [...e.checkpoints, checkpoint]}\n        } else {\n          return e\n        }\n      })\n\n      setValue({ ...value, events: newEvents})\n\n      return checkpoint\n    }\n  }\n\n  return (\n    <ActionsContext.Provider value={actions}>\n      <StorageContext.Provider value={value}>\n        <PersistInLocalstorage />\n        {children}\n      </StorageContext.Provider>\n    </ActionsContext.Provider>\n\n  )\n}\n\nexport default Storage\n","import React, {useContext} from 'react'\nimport {Fab, List, ListItem, ListItemText} from \"@material-ui/core\";\nimport AddIcon from '@material-ui/icons/Add';\nimport {Link} from \"react-router-dom\";\nimport {StorageContext} from \"../Storage/Storage\";\n\nconst Event = ({ id, name }: { id: string, name: string }) => (\n  <ListItem button component={Link} to={`/events/${id}`}>\n    <ListItemText primary={name} secondary=\"Jan 9, 2014\" />\n  </ListItem>\n)\n\nconst EventList = () => {\n  const { events } = useContext(StorageContext)\n  return (\n    <div>\n      <List>\n        {events.map(({ id, name }) => (\n          <Event key={id} id={id} name={name} />\n        ))}\n      </List>\n\n      <Fab color=\"primary\" aria-label=\"add\" component={Link} to='/events/new'>\n        <AddIcon />\n      </Fab>\n    </div>\n\n  )\n}\n\nexport default EventList\n","import React, {useContext, useState} from 'react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\"\nimport {ActionsContext} from \"../Storage/Storage\";\n\nconst AddEvent = () => {\n  const [name, setName] = useState('')\n\n  const actions = useContext(ActionsContext)\n  const history = useHistory()\n  const handleClose = () => {\n    history.push('/')\n  }\n\n\n  const handleSubmit = () => {\n    const event = actions?.addEvent(name)\n    if (event) {\n      history.push(`/events/${event.id}`)\n    }\n  }\n  return (\n    <Dialog\n      open\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\">Create a new event</DialogTitle>\n      <DialogContent>\n        <TextField id=\"standard-basic\" label=\"Name\" onChange={e => setName(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleSubmit} color=\"primary\">\n          Create\n        </Button>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default AddEvent\n","import {Box, Typography} from '@material-ui/core';\nimport React from 'react'\n\ninterface Props {\n    scoredIds: number[],\n    max: number\n}\n\nconst MissingCheckpointsArea = ({ scoredIds, max }: Props) => {\n    const allPoints = Array(max).fill(max).map((_, idx) => 1 + idx)\n    const missingPoints = allPoints.filter(p => !scoredIds.includes(p));\n\n   if (scoredIds.length === 0) {\n       return null\n   }\n\n    return (\n        <Box mt={3}>\n            <Box minWidth={35} ml={1} mb={1}>\n                <Typography>Missing:</Typography>\n            </Box>\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box width=\"100%\" ml={1}>\n                    {missingPoints.join(', ')}\n                </Box>\n            </Box>\n        </Box>\n    )\n}\n\nexport default MissingCheckpointsArea\n","import {Box, Fab, List, ListItem, ListItemText, Typography} from '@material-ui/core';\nimport React from 'react'\nimport {OrienteeringEvent} from \"../../types/OrienteeringEvent\";\n\nimport LinearProgress, { LinearProgressProps } from '@material-ui/core/LinearProgress';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Link } from 'react-router-dom';\nimport MissingCheckpointsArea from \"../MissingCheckpointsArea/MissingCheckpointsArea\";\n\nfunction LinearProgressWithLabel({ current, max, ...props}: LinearProgressProps & { current: number, max: number }) {\n  const value = 100 * current / max\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} value={value} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{current}/{max}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\ninterface Props {\n  event: OrienteeringEvent\n  newCheckpointPath: string\n}\n\nconst ScoreLauf = ({ event, newCheckpointPath }: Props) => {\n  const checkpoints = event.checkpoints\n  return (\n    <div>\n      <Typography>{event.name}</Typography>\n      <LinearProgressWithLabel current={checkpoints.length} max={event.numberOfCheckpoints} />\n\n      {checkpoints.length > 0 && (\n        <List>\n          {checkpoints.map(checkpoint => (\n            <ListItem key={checkpoint.id}>\n              <ListItemText primary={checkpoint.id} secondary={checkpoint.skipped ? 'skipped' : checkpoint.code} />\n            </ListItem>\n          ))}\n        </List>\n      )}\n\n      <Fab color=\"primary\" aria-label=\"add\" component={Link} to={newCheckpointPath}>\n        <AddIcon />\n      </Fab>\n        <MissingCheckpointsArea scoredIds={checkpoints.map(ch => parseInt(ch.id, 10))} max={event.numberOfCheckpoints} />\n    </div>\n  )\n}\n\nexport default ScoreLauf\n","import React, {useContext} from 'react'\nimport {\n  useParams\n} from \"react-router-dom\"\nimport {StorageContext} from \"../Storage/Storage\"\nimport ScoreLauf from \"../ScoreLauf/ScoreLauf\"\n\nconst EventPage = () => {\n  const { id } = useParams<{ id: string }>()\n  const { events } = useContext(StorageContext)\n\n  const event = events.find(e => e.id === id)\n\n  if (!event) {\n    return null\n  }\n\n  return <ScoreLauf event={event} newCheckpointPath={`/events/${event.id}/add-checkpoint`}/>\n}\n\nexport default EventPage\n","import React, {useContext} from 'react'\nimport { Form, Field } from 'react-final-form'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport { Box, Button, TextField } from '@material-ui/core'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {ActionsContext} from \"../Storage/Storage\";\nimport {useHistory, useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      margin: theme.spacing(1),\n    }\n  }),\n);\n\ninterface Values {\n  id: string\n  code?: string\n  skipped: boolean\n}\n\nconst AddCheckpointPage = () => {\n  const actions = useContext(ActionsContext)\n  const { id: eventId } = useParams<{ id: string }>()\n\n  const history = useHistory()\n\n  const handleCheckpointSubmit = (checkpoint: Values) => {\n    actions?.addCheckpoint({ eventId, ...checkpoint })\n    history.push(`/events/${eventId}`)\n  }\n\n  const classes = useStyles()\n\n  return (\n    <Form<Values>\n        onSubmit={handleCheckpointSubmit}\n        initialValues={{ skipped: false }}\n        render={({ values, handleSubmit }) => {\n            if (values.skipped) {\n                delete values.code\n            }\n\n           return (<form onSubmit={handleSubmit}>\n                <Field\n                    name=\"id\"\n                    render={({input, meta}) => (\n                        <div className={classes.margin}>\n                            <TextField {...input}\n                                       label='Id'\n                                       required\n                                       autoComplete=\"off\"\n                            />\n                            {meta.touched && meta.error && <span>{meta.error}</span>}\n                        </div>\n                    )}\n                />\n\n                <Field\n                    name=\"code\"\n                    render={({input, meta}) => (\n                        <div className={classes.margin}>\n                            <TextField {...input}\n                                       label='Code'\n                                       required={!values.skipped}\n                                       disabled={values.skipped}\n                                       autoComplete=\"off\"\n                            />\n                            {meta.touched && meta.error && <span>{meta.error}</span>}\n                        </div>\n                    )}\n                />\n\n                <Field\n                    name=\"skipped\"\n                    type=\"checkbox\"\n                    render={({input, meta}) => (\n                        <Box display=\"flex\" alignItems=\"center\" ml={1}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        {...input}\n                                        checked={input.value}\n                                        name=\"skipped\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Skip\"\n                            />\n                        </Box>\n                    )}\n                />\n\n                <Button variant=\"contained\" color=\"primary\" type='submit'>\n                    Submit\n                </Button>\n            </form>)\n        }\n    }/>\n  )\n}\n\nexport default AddCheckpointPage\n","import React from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { AppBar, Toolbar, Typography, Link } from \"@material-ui/core\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink\n} from \"react-router-dom\"\n\nimport EventList from './components/EventList/EventList'\nimport Storage from './components/Storage/Storage'\nimport AddEvent from \"./components/AddEvent/AddEvent\";\nimport EventPage from \"./components/EventPage/EventPage\";\nimport AddCheckpointPage from \"./components/AddCheckpointPage/AddCheckpointPage\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nfunction App() {\n  const classes = useStyles()\n\n  return (\n    <Storage>\n      <Router basename={process.env.PUBLIC_URL}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link component={RouterLink} to='/' color='inherit'>\n                Woodtime\n              </Link>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Switch>\n          <Route path=\"/\" exact>\n            <EventList />\n          </Route>\n          <Route path=\"/events/new\" exact>\n            <EventList />\n            <AddEvent />\n          </Route>\n          <Route path=\"/events/:id\" exact>\n            <EventPage />\n          </Route>\n          <Route path=\"/events/:id/add-checkpoint\" exact>\n            <AddCheckpointPage />\n          </Route>\n        </Switch>\n      </Router>\n    </Storage>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}