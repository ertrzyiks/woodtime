{"version":3,"sources":["components/Storage/Storage.tsx","components/EventList/EventList.tsx","components/AddEvent/AddEvent.tsx","components/MissingCheckpointsArea/MissingCheckpointsArea.tsx","components/ScoreLauf/ScoreLauf.tsx","components/EventPage/EventPage.tsx","components/AddCheckpointPage/AddCheckpointPage.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["StorageContext","React","createContext","events","ActionsContext","PersistInLocalstorage","value","useContext","useEffect","localStorage","setItem","JSON","stringify","Storage","children","useState","storedValueRaw","getItem","parse","setValue","actions","addEvent","name","numCheckpoints","event","id","Date","getTime","createdAt","toISOString","numberOfCheckpoints","parseInt","checkpoints","newValue","addCheckpoint","eventId","code","skipped","find","e","Error","some","ch","checkpoint","newEvents","map","deleteCheckpoint","updatedEvents","updatedCheckpoints","filter","Provider","Event","ListItem","button","component","Link","to","ListItemText","primary","secondary","EventList","List","sort","a","b","format","Fab","color","aria-label","AddEvent","setName","setNumCheckpoints","history","useHistory","handleClose","push","Dialog","open","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","onSubmit","render","handleSubmit","DialogContent","input","meta","TextField","label","required","autoComplete","onChange","target","touched","error","DialogActions","Button","variant","type","onClick","MissingCheckpointsArea","scoredIds","max","missingPoints","Array","fill","_","idx","p","includes","length","Box","mt","minWidth","ml","mb","Typography","display","alignItems","width","join","LinearProgressWithLabel","current","props","mr","LinearProgress","ScoreLauf","newCheckpointPath","IconButton","checkpointId","EventPage","useParams","useStyles","makeStyles","theme","createStyles","margin","spacing","AddCheckpointPage","classes","err","message","startsWith","FORM_ERROR","initialValues","values","submitError","className","disabled","FormControlLabel","control","Checkbox","checked","root","flexGrow","menuButton","marginRight","title","App","basename","process","AppBar","position","Toolbar","RouterLink","path","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6b8e495b.chunk.js","sourcesContent":["import React, { ReactNode, useContext, useEffect, useState } from 'react';\nimport { OrienteeringEvent } from '../../types/OrienteeringEvent';\nimport { Checkpoint } from '../../types/Checkpoint';\n\ninterface Actions {\n  addEvent: (name: string, numCheckpoints: string) => OrienteeringEvent;\n  addCheckpoint: (params: {\n    eventId: number;\n    id: string;\n    code?: string;\n    skipped: boolean;\n  }) => Checkpoint;\n  deleteCheckpoint: (params: { eventId: number; id: string }) => void;\n}\n\ninterface State {\n  events: OrienteeringEvent[];\n}\n\nexport const StorageContext = React.createContext<State>({ events: [] });\nexport const ActionsContext = React.createContext<Actions | null>(null);\n\nconst PersistInLocalstorage = () => {\n  const value = useContext(StorageContext);\n\n  useEffect(() => {\n    localStorage.setItem('woodtime-storage', JSON.stringify(value));\n  }, [value]);\n\n  return null;\n};\n\nconst Storage = ({ children }: { children?: ReactNode }) => {\n  const [value, setValue] = useState<State>(() => {\n    const storedValueRaw = localStorage.getItem('woodtime-storage') ?? '';\n    return storedValueRaw\n      ? JSON.parse(storedValueRaw)\n      : { events: [] as Event[] };\n  });\n\n  const actions: Actions = {\n    addEvent: (name: string, numCheckpoints: string) => {\n      const event = {\n        id: new Date().getTime(),\n        name,\n        createdAt: new Date().toISOString(),\n        numberOfCheckpoints: parseInt(numCheckpoints, 10),\n        checkpoints: [],\n      };\n      const newValue = { events: [...value.events, event] };\n      setValue(newValue);\n      return event;\n    },\n\n    addCheckpoint({ eventId, id, code, skipped }) {\n      const event = value.events.find((e) => e.id === eventId);\n      if (!event) {\n        throw new Error(`Event ${eventId} not found`);\n      }\n\n      const hasCheckpoint = event.checkpoints.some((ch) => ch.id === id);\n      if (hasCheckpoint) {\n        throw new Error(`Checkpoint ${id} already added`);\n      }\n\n      const checkpoint = {\n        id,\n        skipped,\n        code,\n      };\n\n      const newEvents = value.events.map((e) => {\n        if (e.id === eventId) {\n          return { ...e, checkpoints: [...e.checkpoints, checkpoint] };\n        } else {\n          return e;\n        }\n      });\n\n      setValue({ ...value, events: newEvents });\n\n      return checkpoint;\n    },\n\n    deleteCheckpoint: ({ eventId, id }) => {\n      const event = value.events.find((e) => e.id === eventId);\n      if (!event) {\n        throw new Error(`Event ${eventId} not found`);\n      }\n\n      const updatedEvents = value.events.map((e) => {\n        if (e.id !== eventId) {\n          return e;\n        }\n\n        const updatedCheckpoints = e.checkpoints.filter((ch) => ch.id !== id);\n        return { ...e, checkpoints: updatedCheckpoints };\n      });\n\n      setValue({ ...value, events: updatedEvents });\n    },\n  };\n\n  return (\n    <ActionsContext.Provider value={actions}>\n      <StorageContext.Provider value={value}>\n        <PersistInLocalstorage />\n        {children}\n      </StorageContext.Provider>\n    </ActionsContext.Provider>\n  );\n};\n\nexport default Storage;\n","import React, { useContext } from 'react';\nimport { Fab, List, ListItem, ListItemText } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Link } from 'react-router-dom';\nimport { StorageContext } from '../Storage/Storage';\nimport format from 'date-fns/format';\n\nconst Event = ({\n  id,\n  name,\n  createdAt,\n}: {\n  id: number;\n  name: string;\n  createdAt: string;\n}) => (\n  <ListItem button component={Link} to={`/events/${id}`}>\n    <ListItemText primary={name} secondary={createdAt} />\n  </ListItem>\n);\n\nconst EventList = () => {\n  const { events } = useContext(StorageContext);\n  return (\n    <div>\n      <List>\n        {events\n          .sort((a: { id: number }, b: { id: number }) => b.id - a.id)\n          .map(({ id, name, createdAt }) => (\n            <Event\n              key={id}\n              id={id}\n              name={name}\n              createdAt={format(new Date(createdAt), 'dd/MM/yyyy')}\n            />\n          ))}\n      </List>\n\n      <Fab color=\"primary\" aria-label=\"add\" component={Link} to=\"/events/new\">\n        <AddIcon />\n      </Fab>\n    </div>\n  );\n};\n\nexport default EventList;\n","import React, { useContext, useState } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { ActionsContext } from '../Storage/Storage';\nimport { Field, Form } from 'react-final-form';\n\ninterface Values {\n  name: string;\n  numCheckpoints: string;\n}\n\nconst AddEvent = () => {\n  const [name, setName] = useState('');\n  const [numCheckpoints, setNumCheckpoints] = useState('');\n\n  const actions = useContext(ActionsContext);\n  const history = useHistory();\n  const handleClose = () => {\n    history.push('/');\n  };\n\n  const handleSubmit = () => {\n    const event = actions?.addEvent(name, numCheckpoints);\n    if (event) {\n      history.push(`/events/${event.id}`);\n    }\n  };\n  return (\n    <Dialog\n      open\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\">\n        Create a new event\n      </DialogTitle>\n      <Form<Values>\n        onSubmit={handleSubmit}\n        render={({ handleSubmit }) => {\n          return (\n            <form onSubmit={handleSubmit}>\n              <DialogContent>\n                <Field\n                  name=\"id\"\n                  render={({ input, meta }) => (\n                    <div>\n                      <TextField\n                        id=\"standard-basic\"\n                        label=\"Name\"\n                        required\n                        autoComplete=\"off\"\n                        onChange={(e) => setName(e.target.value)}\n                      />\n                      {meta.touched && meta.error && <span>{meta.error}</span>}\n                    </div>\n                  )}\n                />\n\n                <Field\n                  name=\"code\"\n                  render={({ input, meta }) => (\n                    <div>\n                      <TextField\n                        id=\"standard-basic\"\n                        label=\"Points\"\n                        required\n                        autoComplete=\"off\"\n                        onChange={(e) => setNumCheckpoints(e.target.value)}\n                      />\n                      {meta.touched && meta.error && <span>{meta.error}</span>}\n                    </div>\n                  )}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                  Create\n                </Button>\n                <Button onClick={handleClose} color=\"primary\">\n                  Cancel\n                </Button>\n              </DialogActions>\n            </form>\n          );\n        }}\n      />\n    </Dialog>\n  );\n};\n\nexport default AddEvent;\n","import { Box, Typography } from '@material-ui/core';\nimport React from 'react';\n\ninterface Props {\n  scoredIds: number[];\n  max: number;\n}\n\nconst MissingCheckpointsArea = ({ scoredIds, max }: Props) => {\n  const allPoints = Array(max)\n    .fill(max)\n    .map((_, idx) => 1 + idx);\n  const missingPoints = allPoints.filter((p) => !scoredIds.includes(p));\n\n  if (scoredIds.length === 0 || scoredIds.length === max) {\n    return null;\n  }\n\n  return (\n    <Box mt={3}>\n      <Box minWidth={35} ml={1} mb={1}>\n        <Typography>Missing:</Typography>\n      </Box>\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box width=\"100%\" ml={1}>\n          {missingPoints.join(', ')}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default MissingCheckpointsArea;\n","import {\n  Box,\n  Fab,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport { OrienteeringEvent } from '../../types/OrienteeringEvent';\n\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@material-ui/core/LinearProgress';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link } from 'react-router-dom';\nimport MissingCheckpointsArea from '../MissingCheckpointsArea/MissingCheckpointsArea';\nimport IconButton from '@material-ui/core/IconButton';\nimport { ActionsContext } from '../Storage/Storage';\n\nfunction LinearProgressWithLabel({\n  current,\n  max,\n  ...props\n}: LinearProgressProps & { current: number; max: number }) {\n  const value = (100 * current) / max;\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} value={value} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {current}/{max}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\ninterface Props {\n  event: OrienteeringEvent;\n  newCheckpointPath: string;\n}\n\nconst ScoreLauf = ({ event, newCheckpointPath }: Props) => {\n  const actions = useContext(ActionsContext);\n  const checkpoints = event.checkpoints;\n\n  const handleDeleteClick = (checkpointId: string) => {\n    actions?.deleteCheckpoint({ eventId: event.id, id: checkpointId });\n  };\n\n  return (\n    <div>\n      <Typography>{event.name}</Typography>\n      <LinearProgressWithLabel\n        current={checkpoints.length}\n        max={event.numberOfCheckpoints}\n      />\n\n      {checkpoints.length > 0 && (\n        <List>\n          {checkpoints.map((checkpoint) => (\n            <ListItem key={checkpoint.id}>\n              <ListItemText\n                primary={checkpoint.id}\n                secondary={checkpoint.skipped ? 'skipped' : checkpoint.code}\n              />\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => handleDeleteClick(checkpoint.id)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItem>\n          ))}\n        </List>\n      )}\n\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        component={Link}\n        to={newCheckpointPath}\n      >\n        <AddIcon />\n      </Fab>\n      <MissingCheckpointsArea\n        scoredIds={checkpoints.map((ch) => parseInt(ch.id, 10))}\n        max={event.numberOfCheckpoints}\n      />\n    </div>\n  );\n};\n\nexport default ScoreLauf;\n","import React, { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { StorageContext } from '../Storage/Storage';\nimport ScoreLauf from '../ScoreLauf/ScoreLauf';\n\nconst EventPage = () => {\n  const { id } = useParams<{ id: string }>();\n  const { events } = useContext(StorageContext);\n\n  const event = events.find((e) => e.id === parseInt(id, 10));\n\n  if (!event) {\n    return null;\n  }\n\n  return (\n    <ScoreLauf\n      event={event}\n      newCheckpointPath={`/events/${event.id}/add-checkpoint`}\n    />\n  );\n};\n\nexport default EventPage;\n","import React, { useContext } from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Box, Button, TextField } from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { ActionsContext } from '../Storage/Storage';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { FORM_ERROR } from 'final-form';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      margin: theme.spacing(1),\n    },\n  })\n);\n\ninterface Values {\n  id: string;\n  code?: string;\n  skipped: boolean;\n}\n\nconst AddCheckpointPage = () => {\n  const actions = useContext(ActionsContext);\n  const { id: eventId } = useParams<{ id: string }>();\n\n  const history = useHistory();\n\n  const handleCheckpointSubmit = (checkpoint: Values) => {\n    try {\n      actions?.addCheckpoint({ eventId: parseInt(eventId, 10), ...checkpoint });\n      history.push(`/events/${eventId}`);\n    } catch (err) {\n      if (!err) {\n        return {\n          [FORM_ERROR]: 'Something went wrong',\n        };\n      }\n\n      if (err.message && err.message.startsWith('Checkpoint')) {\n        return {\n          id: 'Id already taken',\n        };\n      }\n\n      return {\n        [FORM_ERROR]: err.message || err,\n      };\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Form<Values>\n      onSubmit={handleCheckpointSubmit}\n      initialValues={{ skipped: false }}\n      render={({ values, submitError, handleSubmit }) => {\n        if (values.skipped) {\n          delete values.code;\n        }\n\n        return (\n          <form onSubmit={handleSubmit}>\n            {submitError && (\n              <div className=\"error\">{submitError}</div> // not showing\n            )}\n            <Field\n              name=\"id\"\n              render={({ input, meta }) => (\n                <div className={classes.margin}>\n                  <TextField\n                    {...input}\n                    label=\"Id\"\n                    required\n                    autoComplete=\"off\"\n                  />\n                  {meta.touched && (meta.error || meta.submitError) && (\n                    <span>{meta.error || meta.submitError}</span>\n                  )}\n                </div>\n              )}\n            />\n\n            <Field\n              name=\"code\"\n              render={({ input, meta }) => (\n                <div className={classes.margin}>\n                  <TextField\n                    {...input}\n                    label=\"Code\"\n                    required={!values.skipped}\n                    disabled={values.skipped}\n                    autoComplete=\"off\"\n                  />\n                  {meta.touched && (meta.error || meta.submitError) && (\n                    <span>{meta.error || meta.submitError}</span>\n                  )}\n                </div>\n              )}\n            />\n\n            <Field\n              name=\"skipped\"\n              type=\"checkbox\"\n              render={({ input, meta }) => (\n                <Box display=\"flex\" alignItems=\"center\" ml={1}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        {...input}\n                        checked={input.value}\n                        name=\"skipped\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Skip\"\n                  />\n                </Box>\n              )}\n            />\n\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </form>\n        );\n      }}\n    />\n  );\n};\n\nexport default AddCheckpointPage;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography, Link } from '@material-ui/core';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n} from 'react-router-dom';\n\nimport EventList from './components/EventList/EventList';\nimport Storage from './components/Storage/Storage';\nimport AddEvent from './components/AddEvent/AddEvent';\nimport EventPage from './components/EventPage/EventPage';\nimport AddCheckpointPage from './components/AddCheckpointPage/AddCheckpointPage';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Storage>\n      <Router basename={process.env.PUBLIC_URL}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link component={RouterLink} to=\"/\" color=\"inherit\">\n                Woodtime\n              </Link>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Switch>\n          <Route path=\"/\" exact>\n            <EventList />\n          </Route>\n          <Route path=\"/events/new\" exact>\n            <EventList />\n            <AddEvent />\n          </Route>\n          <Route path=\"/events/:id\" exact>\n            <EventPage />\n          </Route>\n          <Route path=\"/events/:id/add-checkpoint\" exact>\n            <AddCheckpointPage />\n          </Route>\n        </Switch>\n      </Router>\n    </Storage>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}